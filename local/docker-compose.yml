version: '3.8'

services:

  mysql_db_accounts:
    container_name: mysql_db_accounts
    image: mysql:8.0.32
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - mysql_data_db_accounts:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: db_accounts
    extends:
      file: common-compose.yml
      service: microservice-db-config
    networks:
      - accounts-net

  mysql_db_loans:
    container_name: mysql_db_loans
    image: mysql:8.0.32
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - mysql_data_db_loans:/var/lib/mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: db_loans
    extends:
      file: common-compose.yml
      service: microservice-db-config
    networks:
      - loans-net

  mysql_db_cards:
    container_name: mysql_db_cards
    image: mysql:8.0.32
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - mysql_data_db_cards:/var/lib/mysql
    ports:
      - "3308:3306"
    environment:
      MYSQL_DATABASE: db_cards
    extends:
      file: common-compose.yml
      service: microservice-db-config
    networks:
      - cards-net

  redis_rate_limiter:
    image: redis:latest
    container_name: redis_rate_limiter
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL","redis-cli ping | grep PONG"]
      timeout: 10s
      retries: 10
    extends:
      file: common-compose.yml
      service: microservice-configserver-config

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:22.0.1
    ports:
      - "7080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: [ "start-dev","--import-realm" ]
    volumes:
      - keycloak_reamls_data:/opt/keycloak/data/
    extends:
      file: common-compose.yml
      service: network-deploy-service

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - volume_data_rabbitmq:/var/lib/rabbitmq/mnesia
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 3
    extends:
      file: common-compose.yml
      service: network-deploy-service

  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:3.7.2
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    extends:
      file: common-compose.yml
      service: network-deploy-service

  kafka:
    container_name: kafka
    image: bitnami/kafka:3.2.3
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - "kafka_data:/bitnami"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://localhost:9092
    healthcheck:
      test: "bash -c 'echo QUIT | nc -w 1 localhost 9092'"
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      - zookeeper
    extends:
      file: common-compose.yml
      service: network-deploy-service

volumes:
  mysql_data_db_accounts:
    external: false
  mysql_data_db_loans:
    external: false
  mysql_data_db_cards:
    external: false
  keycloak_reamls_data:
    external: false
  volume_data_rabbitmq:
    external: false
  zookeeper_data:
    external: false
  kafka_data:
    external: false

networks:
  spring:
    driver: bridge
  accounts-net:
    driver: bridge
  cards-net:
    driver: bridge
  loans-net:
    driver: bridge